# swagger: "2.0"
# info:
#   title: TODO APP swagger Docs
#   version: "1.0.0"
#   description: Swagger UI Docs for Project (TODO APP)

#   servers:
#     -url: "http://localhost:1000/api-docs/"
#     description: This is Local Server
# host: localhost:1000
# basePath: /
# schemes:
#   - http
#   - https

# securityDefinitions:
#   login_a_user:
#     type: apiKey
#     name: authorization
#     in: header

# paths:
#   # USERS

#   # Post api to create new user response => web token
#   /api/auth/createuser:
#     post:
#       summary: Create A New User
#       tags:
#         - Accounts
#       description: API to create new user account
#       produce:
#         - applicaition/json
#       cosume:
#         - applicaition/json
#       parameters:
#         - in: body
#           name: Create User
#           description: Enter Valid Information.
#           schema:
#             type: object
#             properties:
#               name:
#                 type: string
#               email:
#                 type: string
#                 format: email
#               password:
#                 type: string
#       responses:
#         200:
#           description: New User Created
#           schemes:
#             type: object
#             example: Json web token
#         400:
#           description: Bad Request
#         500:
#           description: Internal Server Error

#   # Post api to login a user response => web token
#   /api/auth/login:
#     post:
#       summary: Login A User
#       security: []
#       tags:
#         - Accounts
#       description: API to validate and login a user with jwt
#       produce:
#         - applicaition/json
#       cosume:
#         - applicaition/json
#       parameters:
#         - in: body
#           name: Login User
#           schema:
#             type: object
#             properties:
#               email:
#                 type: string
#                 format: email
#               password:
#                 type: string
#       responses:
#         200:
#           description: User Logged In
#           schemes:
#             type: object
#             example: Json web token
#         400:
#           description: Bad Request
#         500:
#           description: Internal Server Error

#   # NOTES

#   # Post api to create a note response => note object
#   /api/notes/addnote:
#     post:
#       summary: Create A Note
#       tags:
#         - Notes
#       description: API to create new note
#       security:
#         - login_a_user: []
#       parameters:
#         - in: header
#           name: auth-token
#           type: string
#           required: true
#         - in: body
#           name: Create Task
#           schema:
#             type: object
#             properties:
#               title:
#                 type: string
#               description:
#                 type: string
#               tags:
#                 type: string
#       responses:
#         200:
#           description: New Note Created
#           schemes:
#             type: object
#             example: Json web token
#         400:
#           description: Bad Request
#         500:
#           description: Internal Server Error

#   # Get api to get all notes response => array of notes
#   /api/notes/fetchallnotes:
#     get:
#       summary: Get All Notes
#       tags:
#         - Notes
#       description: API to get all notes
#       security:
#         - login_a_user: []
#       parameters:
#         - in: header
#           name: auth-token
#           type: string
#           required: true
#       responses:
#         200:
#           description: Notes Found
#           schemes:
#             type: object
#             example: Json web token
#         400:
#           description: Bad Request
#         401:
#           description: Unauthorized
#         500:
#           description: Internal Server Error

#   # Put api to update a note reponse => note object
#   /api/notes/updatenote/{id}:
#     put:
#       summary: Update A Note
#       tags:
#         - Notes
#       description: API to update a note
#       security:
#         - login_a_user: []
#       parameters:
#         - in: body
#           name: Update Task
#           schema:
#             type: object
#             properties:
#               title:
#                 type: string
#               description:
#                 type: string
#               tags:
#                 type: string
#         - in: header
#           name: auth-token
#           type: string
#           required: true
#           description: Enter Token
#         - in: path
#           name: id
#           required: true
#           schema:
#             type: string
#           description: Enter Note Id

#       requestBody:
#         required: true
#       responses:
#         200:
#           description: Note Updated
#           schemes:
#             type: object
#             example: Json web token
#         400:
#           description: Bad Request
#         500:
#           description: Internal Server Error

#   # Delete api to delete a note response => note object
#   /api/notes/deletenote/{id}:
#     delete:
#       summary: Delete A Note
#       tags:
#         - Notes
#       description: API to delete a note
#       security:
#         - login_a_user: []
#       parameters:
#         - in: header
#           name: auth-token
#           type: string
#           required: true
#           description: Enter Token
#         - in: path
#           name: id
#           required: true
#           schema:
#             type: string
#           description: Enter Note Id
#       responses:
#         200:
#           description: Note Deleted
#           schemes:
#             type: object
#             example: Json web token
#         400:
#           description: Bad Request
#         500:
#           description: Internal Server Error